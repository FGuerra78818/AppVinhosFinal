@model AppVinhosFinal.Models.Pedidos
@using System.Text.Json
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Novo Pedido";
    var vinhos = (List<SelectListItem>)ViewBag.Vinhos;
    var vinhosData = vinhos.Select(v =>
    {
        var text = v.Text;
        var stock = 0;
        var m = System.Text.RegularExpressions.Regex.Match(text, @"\bDisp:\s*(\d+)\b");
        if (m.Success) stock = int.Parse(m.Groups[1].Value);
        return new { value = v.Value, text = text, stock = stock };
    });
    var vinhosJson = JsonSerializer.Serialize(vinhosData);
}

<style>
    .bg-image {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: url('/Images/ImageVineyards.jpg') no-repeat center center fixed;
        background-size: cover;
        filter: blur(8px);
        z-index: -1;
    }

    .content-wrapper {
        position: relative;
        z-index: 1;
        padding: 3rem;
        background-color: #f8f9fa;
        border-radius: 1rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        margin: 2rem auto;
    }

    .temp-cell {
        vertical-align: middle;
        padding: 0;
    }

        .temp-cell .btn-group-toggle {
            display: flex;
            height: 100%;
        }

            .temp-cell .btn-group-toggle .btn {
                flex: 1;
                display: flex;
                align-items: center;
                justify-content: center;
                height: 100%;
                padding: 0; /* remove padding extra */
                border-radius: 0; /* alinha com o resto da tabela */
            }
</style>

<div class="bg-image"></div>
<div class="content-wrapper container">
    <div class="mb-4">
        <a asp-action="Index" class="btn btn-link text-decoration-none mb-3">
            <i class="bi bi-arrow-left"></i> Voltar
        </a>
        <h2 class="mb-0">Novo Pedido</h2>
        <small class="text-muted">Preencha os detalhes do pedido</small>
    </div>

    <form asp-action="Create" method="post">
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h5 class="card-title mb-4">
                    <i class="bi bi-box-seam"></i> Itens do Pedido
                </h5>
                <table class="table" id="tabela-itens">
                    <thead>
                        <tr>
                            <th>Vinho</th>
                            <th>Quantidade</th>
                            <th>Temperatura</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.PedidoVinhos.Count; i++)
                        {
                            var pv = Model.PedidoVinhos[i];
                            var sel = pv.Tipo.ToString();
                            <tr>
                                <td>
                                    <select name="PedidoVinhos[@i].IdVinho"
                                            class="form-control"
                                            data-selected="@pv.IdVinho"
                                            data-stock="">
                                    </select>
                                    <span asp-validation-for="PedidoVinhos[@i].IdVinho"
                                          class="text-danger"></span>
                                </td>
                                <td>
                                    <input type="number"
                                           name="PedidoVinhos[@i].Quantidade"
                                           value="@pv.Quantidade"
                                           class="form-control"
                                           min="1"
                                           max="" />
                                    <span asp-validation-for="PedidoVinhos[@i].Quantidade"
                                          class="text-danger"></span>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                        <label class="btn btn-info @(sel=="Frio"?"active":"")">
                                            <input type="radio"
                                                   name="PedidoVinhos[@i].Tipo"
                                                   value="Frio"
                                                   autocomplete="off"
                                            @(sel == "Frio" ? "checked" : "") />
                                            <i></i>
                                        </label>
                                        <label class="btn btn-danger @(sel=="Quente"?"active":"")">
                                            <input type="radio"
                                                   name="PedidoVinhos[@i].Tipo"
                                                   value="Quente"
                                                   autocomplete="off"
                                            @(sel == "Quente" ? "checked" : "") />
                                            <i></i>
                                        </label>
                                    </div>
                                </td>
                                <td>
                                    <button type="button align-middle"
                                            class="btn btn-sm btn-danger"
                                            onclick="removerLinha(this)">
                                        ×
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" id="btn-add-vinho" class="btn btn-secondary" onclick="adicionarLinha()">
                    Adicionar Vinho
                </button>
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-primary me-2">Criar Pedido</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const vinhosData = @Html.Raw(vinhosJson);

            function getSelectedIds() {
                // Recolhe todos os Ids seleccionados nas linhas
                return Array.from(document.querySelectorAll('select[name^="PedidoVinhos"]'))
                    .map(sel => sel.value)
                    .filter(v => v);
            }

            function populaLinha(tr) {
                const select = tr.querySelector('select');
                const inputQ = tr.querySelector('input[type=number]');
                const selectedIds = getSelectedIds();
                const mySelected = select.getAttribute('data-selected');

                // Limpa opções e adiciona só vinhos não escolhidos nas outras linhas (ou o seu próprio valor)
                select.innerHTML = '<option value="">-- Seleciona --</option>';
                vinhosData
                    .filter(v => v.value === mySelected || !selectedIds.includes(v.value))
                    .forEach(v => {
                        const o = document.createElement('option');
                        o.value = v.value;
                        o.textContent = v.text;
                        select.appendChild(o);
                    });

                // Repõe seleção antiga, actualiza stock e max
                select.value = mySelected;
                const wine = vinhosData.find(v => v.value === select.value);
                const stock = wine ? wine.stock : 0;
                select.dataset.stock = stock;
                inputQ.max = stock;
                if (parseInt(inputQ.value) > stock) inputQ.value = stock;

                // Quando mudar, refresca todas as linhas
                select.onchange = () => {
                    select.setAttribute('data-selected', select.value);
                    refreshAllLines();
                };
            }

            function refreshAllLines() {
                const selectedIds = getSelectedIds();

                // 1) refresca cada linha
                document.querySelectorAll('#tabela-itens tbody tr').forEach(tr => {
                    populaLinha(tr);
                });

                // 2) vê se ainda há vinhos por escolher
                const remaining = vinhosData
                    .filter(v => !selectedIds.includes(v.value))
                    .length;

                // 3) show/hide do botão
                const btn = document.getElementById('btn-add-vinho');
                if (remaining === 0) {
                    btn.style.display = 'none';
                } else {
                    btn.style.display = '';
                }
            }

            // Inicialização
            refreshAllLines();

            window.adicionarLinha = () => {
                const tb = document.querySelector('#tabela-itens tbody');
                const idx = tb.children.length;
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>
                        <select name="PedidoVinhos[${idx}].IdVinho" class="form-control" data-selected=""></select>
                    </td>
                    <td>
                        <input type="number" name="PedidoVinhos[${idx}].Quantidade" class="form-control" min="1" max="" />
                    </td>
                    <td>
                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-outline-info active">
                                <input type="radio" name="PedidoVinhos[${idx}].Tipo" value="Frio" autocomplete="off" checked />
                                <i class="bi bi-snow"></i>
                            </label>
                            <label class="btn btn-outline-danger">
                                <input type="radio" name="PedidoVinhos[${idx}].Tipo" value="Quente" autocomplete="off" />
                                <i class="bi bi-fire"></i>
                            </label>
                        </div>
                    </td>
                    <td>
                        <button type="button" class="btn btn-sm btn-danger" onclick="removerLinha(this)">×</button>
                    </td>`;
                tb.appendChild(tr);
                refreshAllLines();
            };

            window.removerLinha = btn => {
                const tb = document.querySelector('#tabela-itens tbody');
                if (tb.children.length > 1) {
                    btn.closest('tr').remove();
                    refreshAllLines();
                }
            };
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

